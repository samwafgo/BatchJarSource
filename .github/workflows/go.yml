name: Go Build and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build for Linux
      run: GOOS=linux GOARCH=amd64 go build -v -o BatchJarSource-linux-amd64 ./...

    - name: Move Linux binary to artifacts directory
      run: mv BatchJarSource-linux-amd64 artifacts/

    - name: Build for Windows
      run: GOOS=windows GOARCH=amd64 go build -v -o BatchJarSource-windows-amd64.exe ./...

    - name: Move Windows binary to artifacts directory
      run: mv BatchJarSource-windows-amd64.exe artifacts/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0  # 设置你的版本号
        release_name: Release v1.0.0  # 设置发布名称
        body: |
          Description of the release
        draft: false
        prerelease: false

    - name: Upload Linux Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/BatchJarSource-linux-amd64
        asset_name: BatchJarSource-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/BatchJarSource-windows-amd64.exe
        asset_name: BatchJarSource-windows-amd64.exe
        asset_content_type: application/octet-stream
